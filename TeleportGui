-- Gui to Lua
-- Version: 3.2

-- Instances:

local TeleportGui = Instance.new("ScreenGui")
local TeleportFrame = Instance.new("Frame")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local TextBox = Instance.new("TextBox")

--Properties:

TeleportGui.Name = "TeleportGui"
TeleportGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
TeleportGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TeleportFrame.Name = "TeleportFrame"
TeleportFrame.Parent = TeleportGui
TeleportFrame.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
TeleportFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
TeleportFrame.BorderSizePixel = 0
TeleportFrame.Position = UDim2.new(0.0569675714, 0, 0.0984127, 0)
TeleportFrame.Size = UDim2.new(0, 200, 0, 200)

TextButton.Parent = TeleportFrame
TextButton.BackgroundColor3 = Color3.fromRGB(116, 116, 116)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.129999995, 0, 0.620000005, 0)
TextButton.Size = UDim2.new(0, 147, 0, 39)
TextButton.Font = Enum.Font.SourceSans
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 14.000

UICorner.Parent = TextButton

UICorner_2.Parent = TeleportFrame

TextLabel.Parent = TeleportFrame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 200, 0, 40)
TextLabel.Font = Enum.Font.Jura
TextLabel.Text = "TeleportGui"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 33.000
TextLabel.TextWrapped = true

TextBox.Parent = TeleportFrame
TextBox.BackgroundColor3 = Color3.fromRGB(121, 121, 121)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0.0850000009, 0, 0.258333355, 0)
TextBox.Size = UDim2.new(0, 166, 0, 49)
TextBox.Font = Enum.Font.SourceSans
TextBox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TextBox.PlaceholderText = "PlayerUser..."
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 14.000

-- Scripts:

local function WEBEUK_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	local TextBox = script.Parent.Parent.TextBox -- Assuming TextBox is a child of the parent of the button
	local ExecuteButton = script.Parent
	local Players = game:GetService("Players")
	
	ExecuteButton.MouseButton1Click:Connect(function()
		local TargetPlayerName = TextBox.Text
	
		-- Check if the entered player name is not empty
		if TargetPlayerName ~= "" then
			local TargetPlayer = Players:FindFirstChild(TargetPlayerName)
	
			if TargetPlayer then
				-- Teleport the local player to the target player's position
				game.Players.LocalPlayer.Character:MoveTo(TargetPlayer.Character.HumanoidRootPart.Position)
			else
				print("Player not found.")
			end
		else
			print("Please enter a player name.")
		end
	end)
end
coroutine.wrap(WEBEUK_fake_script)()
local function IVXTMWD_fake_script() -- TeleportFrame.UIDrag 
	local script = Instance.new('LocalScript', TeleportFrame)

	-- Made by Real_IceyDev (@lceyDex) --
	-- Simple UI dragger (PC Only/Any device that has a mouse) --
	
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end
coroutine.wrap(IVXTMWD_fake_script)()
